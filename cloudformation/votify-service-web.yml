AWSTemplateFormatVersion: 2010-09-09

Description: Votify Shared Infrastructure Configuration

Parameters:
  InstallationName:
    Type: String
    Description: Indentifier for entire stack and related resources
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC to deploy cluster into
  Cluster:
    Type: String
    Description: ECS Cluster to Deploy Service into
  DesiredCount:
    Type: String
    Description: Number of tasks to scale the service initially
  RepoUrl:
    Type: String
    Description: Docker Repository URL
  DockerImageAndTag:
    Type: String
    Description: The image name and tag
  LoadBalancerDNS:
    Type: String
    Description: The URL endpoint for the client app to reach the API server
  LoadBalancerListener:
    Type: String
    Description: The load balancer listener (HTTP - Port 80)

Resources:

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${InstallationName}-web
      RetentionInDays: 30

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      Role:
        Fn::ImportValue:
          !Sub ${InstallationName}-ServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: website-service
      ContainerDefinitions:
        - Name: web
          Essential: true
          Image: !Sub ${RepoUrl}/${DockerImageAndTag}
          Cpu: 1024
          Memory: 128
          Environment:
            - Name: API_ENDPOINT
              Value: !Sub http://${LoadBalancerDNS}/api
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: web

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP
      Matcher:
          HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 2
      Conditions:
        - Field: host-header
          Values:
            - !Ref LoadBalancerDNS
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
